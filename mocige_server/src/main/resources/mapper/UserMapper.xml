<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.sdjzu.mocige_server.mapper.UserMapper">
    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="cn.edu.sdjzu.mocige_server.entity.User">
        <id column="user_id" property="userId" />
        <result column="username" property="username" />
        <result column="password_hash" property="passwordHash" />
        <result column="email" property="email" />
        <result column="created_at" property="createdAt" />
        <result column="updated_at" property="updatedAt" />
    </resultMap>
    
    <!-- 通用查询列 -->
    <sql id="Base_Column_List">
        user_id, username, password_hash, email, created_at, updated_at
    </sql>
    
    <!-- 根据ID查询 -->
    <select id="selectById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        WHERE user_id = #{id}
    </select>
    
    <!-- 查询所有 -->
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM user
    </select>
    
    <!-- 根据用户名查询用户 -->
    <select id="selectByUsername" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        WHERE username = #{username}
    </select>
    
    <!-- 根据邮箱查询用户 -->
    <select id="selectByEmail" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        WHERE email = #{email}
    </select>
    
    <!-- 根据创建时间范围查询用户 -->
    <select id="selectByCreatedAtRange" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        WHERE created_at BETWEEN #{startTime} AND #{endTime}
    </select>
    
    <!-- 插入 -->
    <insert id="insert" parameterType="cn.edu.sdjzu.mocige_server.entity.User" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO user (username, password_hash, email, created_at, updated_at)
        VALUES (#{username}, #{passwordHash}, #{email}, #{createdAt}, #{updatedAt})
    </insert>
    
    <!-- 更新 -->
    <update id="update" parameterType="cn.edu.sdjzu.mocige_server.entity.User">
        UPDATE user
        SET username = #{username},
            password_hash = #{passwordHash},
            email = #{email},
            updated_at = #{updatedAt}
        WHERE user_id = #{userId}
    </update>
    
    <!-- 更新用户名 -->
    <update id="updateUsername">
        UPDATE user
        SET username = #{username},
            updated_at = NOW()
        WHERE user_id = #{userId}
    </update>
    
    <!-- 更新密码哈希 -->
    <update id="updatePasswordHash">
        UPDATE user
        SET password_hash = #{passwordHash},
            updated_at = NOW()
        WHERE user_id = #{userId}
    </update>
    
    <!-- 更新邮箱 -->
    <update id="updateEmail">
        UPDATE user
        SET email = #{email},
            updated_at = NOW()
        WHERE user_id = #{userId}
    </update>
    
    <!-- 删除 -->
    <delete id="deleteById">
        DELETE FROM user
        WHERE user_id = #{id}
    </delete>
</mapper>